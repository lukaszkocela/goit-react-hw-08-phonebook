{"version":3,"file":"static/js/377.c8fd6515.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/PhoneBookForm.jsx","components/PhoneBookModal.jsx","components/Filter.jsx","components/PhoneBookList.jsx","pages/Phonebook.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectIsLoading = (state) => state.contacts.isLoading;\nexport const selectError = (state) => state.contacts.error;\nexport const selectContacts = (state) => state.contacts.contacts;\nexport const selectFilteredContacts = (state) => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilteredContacts],\n  (contacts, filteredContacts) => {\n    if (filteredContacts === \"\") {\n      return contacts;\n    } else {\n      return contacts.filter(\n        (contact) =>\n          contact.name.toLowerCase().includes(filteredContacts.filter) ?? []\n      );\n    }\n  }\n);\n","import { Button, TextField } from '@mui/material';\n\nconst styles = {\n  container: ['flex', 'justify-center'].join(' '),\n  form: ['flex', 'flex-col', 'items-start', 'max-w-sm'].join(' '),\n  label: ['flex', 'flex-col', 'mb-5', 'w-50'].join(' '),\n};\n\nexport const PhoneBookForm = ({ onSubmit }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(evt);\n  };\n\n  return (\n    <div className={styles.container}>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          <TextField\n            type=\"text\"\n            size=\"small\"\n            name=\"name\"\n            label=\"Name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Lucas, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={styles.label}>\n          <TextField\n            type=\"tel\"\n            size=\"small\"\n            name=\"number\"\n            label=\"Number\"\n            title=\"Please enter the correct number xxx-xxx-xxx\"\n            required\n          />\n        </label>\n\n        <Button type=\"submit\" variant=\"contained\" style={{ margin: '0 auto' }}>\n          Save\n        </Button>\n      </form>\n    </div>\n  );\n};","import Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\n\nconst styles = {\n  box: [\n    'absolute',\n    'top-1/2',\n    'left-1/2',\n    '-translate-x-1/2',\n    '-translate-y-1/2',\n    'bg-gray-100',\n    'p-10',\n    'rounded-2xl',\n    'shadow-2xl'\n  ].join(' '),\n  text: ['text-center', 'pb-7', 'uppercase', 'font-bold'].join(' '),\n};\n\nexport const PhoneBookModal = ({ open, handleModalClose, children, title }) => {\n  return (\n    <Modal\n      open={open}\n      onClose={handleModalClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box className={styles.box}>\n        <h3 className={styles.text}>{title}</h3>\n        {children}\n      </Box>\n    </Modal>\n  );\n};","import { TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filtersSlice';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport { addNewContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { PhoneBookForm } from './PhoneBookForm';\nimport { PhoneBookModal } from './PhoneBookModal';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst styles = [\n  'flex',\n  'items-center',\n  'justify-evenly',\n  'border-b-4',\n  'border-gray-50',\n  'p-2',\n  'mb-5',\n].join(' ');\n\nexport const Filter = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleModalOpen = () => setOpen(true);\n  const handleModalClose = () => setOpen(false);\n\n  const handleInputChange = evt => dispatch(filterContact(evt.target.value));\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const contact = {\n      name,\n      number,\n    };\n\n    if (stateContactsNames.includes(name)) {\n      return toast.error(`${name} is alredy in contacts`, {\n        position: 'top-center',\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n    } else {\n      const regularExpressionName =\n        /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u;\n      if (!regularExpressionName.test(name)) {\n        return toast.error('Please enter right name', {\n          position: 'top-center',\n          autoClose: 4000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n      }\n\n      const regularExpressionPhone = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3})$/;\n      if (!regularExpressionPhone.test(number)) {\n        return toast.error('Please enter the correct number xxx-xxx-xxx', {\n          position: 'top-center',\n          autoClose: 4000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n      }\n    }\n\n    dispatch(addNewContact(contact));\n    setOpen(false);\n\n    toast.success('Contact added succesfully', {\n      position: 'top-center',\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark',\n    });\n\n    form.reset();\n  };\n\n  return (\n    <div className={styles}>\n      <TextField\n        size=\"small\"\n        label=\"Find contact by name\"\n        onChange={handleInputChange}\n      />\n      <Button onClick={handleModalOpen} variant=\"contained\">\n        Add new contact\n      </Button>\n      <PhoneBookModal\n        open={open}\n        handleModalClose={handleModalClose}\n        title=\"Add contact\"\n      >\n        <PhoneBookForm onSubmit={handleSubmit} />\n      </PhoneBookModal>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n    </div>\n  );\n};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact, editContact } from 'redux/contacts/operations';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditNoteIcon from '@mui/icons-material/EditNote';\nimport { deepOrange } from '@mui/material/colors';\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  IconButton,\n  Tooltip,\n  TablePagination,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@mui/material';\nimport { PhoneBookModal } from './PhoneBookModal';\nimport { PhoneBookForm } from './PhoneBookForm';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nexport const PhoneBookList = () => {\n  const [contactId, setContactId] = useState('');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleOpenDelete = evt => {\n    setContactId(evt.currentTarget.id);\n    setOpenDelete(true);\n  };\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false);\n  };\n\n  const handlePageChange = (event, newPage) => setPage(newPage);\n\n  const handleChangeRowsPerPage = evt => {\n    setRowsPerPage(parseInt(evt.target.value), 10);\n    setPage(0);\n  };\n\n  const handleModalOpen = evt => {\n    setContactId(evt.currentTarget.id);\n    setOpen(true);\n  };\n  const handleModalClose = () => setOpen(false);\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(contactId));\n    toast.success('Contact deleted', {\n      position: 'top-center',\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark',\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const contactData = {\n      name,\n      number,\n      contactId,\n    };\n\n    const regularExpressionName =\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u;\n    if (!regularExpressionName.test(name)) {\n      return toast.error('Please enter right name', {\n        position: 'top-center',\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n    }\n\n    const regularExpressionPhone = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3})$/;\n    if (!regularExpressionPhone.test(number)) {\n      return toast.error('Please enter the correct number xxx-xxx-xxx', {\n        position: 'top-center',\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n    }\n\n    dispatch(editContact(contactData));\n\n    toast.info('Contact changed', {\n      position: 'top-center',\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark',\n    });\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ fontWeight: 800, width: '40%' }} key=\"name\">\n                Name\n            </TableCell>\n            <TableCell sx={{ fontWeight: 800 }} key={'number'}>\n              Phone number\n            </TableCell>\n            <TableCell align=\"right\" sx={{ fontWeight: 800 }}>\n              Actions\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {contacts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(contact => (\n              <TableRow key={contact.id}>\n                <TableCell>{contact.name}</TableCell>\n                <TableCell>{contact.number}</TableCell>\n                <TableCell align=\"right\">\n                  <Tooltip title=\"Edit\">\n                    <IconButton\n                      aria-label=\"edit\"\n                      id={contact.id}\n                      sx={{\n                        ':hover': {\n                          color: '#22dc0d',\n                        },\n                      }}\n                      onClick={handleModalOpen}\n                    >\n                      <EditNoteIcon />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip title=\"Delete\">\n                    <IconButton\n                      aria-label=\"delete\"\n                      sx={{\n                        color: deepOrange[900],\n                        ':hover': {\n                          color: '#bf360c',\n                        },\n                      }}\n                      id={contact.id}\n                      onClick={handleOpenDelete}\n                    >\n                      <DeleteForeverIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10]}\n        component=\"div\"\n        count={contacts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <PhoneBookModal\n        open={open}\n        handleModalClose={handleModalClose}\n        title=\"Edit contact\"\n      >\n        <PhoneBookForm onSubmit={handleSubmit} />\n      </PhoneBookModal>\n\n      <Dialog\n        open={openDelete}\n        onClose={handleCloseDelete}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete Contact</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete contact?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDelete}>No</Button>\n          <Button\n            onClick={(handleCloseDelete, handleDeleteContact)}\n            autoFocus\n            variant=\"contained\"\n          >\n            Yes, I'm sure\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </>\n  );\n};","import { Filter } from '../components/Filter';\nimport { PhoneBookList } from '../components/PhoneBookList';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nconst styles = {\n  container: ['pt-10'].join(' '),\n  phonebook: ['text-5xl', 'pb-14', 'text-center', 'uppercase'].join(' '),\n  /* contacts: ['text-3xl', 'pb-4', 'pt-10', 'text-center'].join(' '), */\n};\n\nconst Phonebook = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <div className={styles.container}>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n      </HelmetProvider>\n\n      <h2 className={styles.phonebook}>Phonebook</h2>\n\n      <Filter />\n      {isLoading ? <p>Loading contacts...</p> : <PhoneBookList />}\n      {error && <p>Data loading error</p>}\n    </div>\n  );\n};\n\nexport default Phonebook;"],"names":["selectIsLoading","state","contacts","isLoading","selectError","error","selectContacts","selectVisibleContacts","createSelector","filters","filteredContacts","filter","contact","name","toLowerCase","includes","styles","container","join","form","label","PhoneBookForm","onSubmit","className","evt","preventDefault","TextField","type","size","title","required","Button","variant","style","margin","box","text","PhoneBookModal","open","handleModalClose","children","Modal","onClose","Box","Filter","useState","setOpen","dispatch","useDispatch","stateContactsNames","useSelector","map","onChange","filterContact","target","value","onClick","elements","number","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","test","addNewContact","reset","newestOnTop","rtl","pauseOnFocusLoss","PhoneBookList","contactId","setContactId","page","setPage","rowsPerPage","setRowsPerPage","openDelete","setOpenDelete","handleOpenDelete","currentTarget","id","handleCloseDelete","handleModalOpen","Table","TableHead","TableRow","TableCell","sx","fontWeight","width","align","TableBody","slice","Tooltip","IconButton","color","EditNote","deepOrange","DeleteForever","fontSize","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","parseInt","contactData","editContact","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteContact","autoFocus","phonebook"],"sourceRoot":""}